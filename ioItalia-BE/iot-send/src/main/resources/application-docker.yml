# Spring Boot configuration
spring:
  profiles:
    active: prod
  messages:
    encoding: UTF-8
  thymeleaf:
    mode: HTML5
    encoding: UTF-8

  rabbitmq:
    host: ${RABBIT_HOST}
    port: ${RABBIT_PORT}
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}

  jms:
    pub-sub-domain: false

  jpa:
    database: postgresql
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
      #ddl-auto: none
      #7ddl-auto: update
      #ddl-auto: validate
      #ddl-auto: create-drop
      #ddl-auto: create
    properties:
      hibernate:
        default_schema: suiot01
        temp:
          use_jdbc_metadata_defaults: false
        connection:
          connection: utf-8
          CharSet: utf-8
          useUnicode: true

  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

    allow-bean-definition-overriding: true

  security:
    oauth2:
      resourceserver:
        id: ${RESOURCESERVER_ID:iotrentino}
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:https://aac.platform.smartcommunitylab.it/aac}
          jwk-set-uri: ${OAUTH2_JWK_URI:https://aac.platform.smartcommunitylab.it/aac/jwk}


  datasource:
    platform: postgresql
    url: jdbc:postgresql://${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/suiot01?characterEncoding=UTF-8&useSSL=true&requireSSL=true
    username: ${POSTGRESQL_USERNAME}
    password: ${POSTGRESQL_PASSWORD}
    driver-class-name: org.postgresql.Driver
    initialization-mode: always
    #initialization-mode: never
    continue-on-error: true
    tomcat:
      connection-properties:
      test-on-borrow: true
      validation-query: SELECT 1
      validation-interval: 30000
      remove-abandoned: true
      remove-abandoned-timeout: 55
      max-active: 200
      test-while-idle: true

    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 10000
      max-lifetime: 30000
      #maxLifetime: 30000
      connection-timeout: 20000


  data:
    neo4j:
      open-in-view: true

  aop:
    auto: true

  application:
    name: IO.T. Sender

server:
  port: ${PORT}
  tomcat:
    uri-encoding: UTF-8

opentracing:
  jaeger:
    udp-sender:
      host: ${JAEGER_HOST}
      port: ${JAEGER_PORT}


#Per attivare la schedulazione Ã¨ necessario
#settare la chiave iot.cron.enable a true
#la property fixedDelay definisce il tempo tra un'esecuzione e l'altra
iot:
  crypt:
    secretKey: ICmpuCr4PGYJ2nsKqp3y
    salt: RrPdwdiAsDAOqJdDHSO7



logging:
  level:
    root: INFO
    org.springframework.web: ERROR
    com.fasterxml.jackson: ERROR
    it.infotn: INFO
    it.infotn.opv.service.command.schedavalutazione: DEBUG
    io.swagger.models: ERROR

application:
  io-app:
    codidclientid: 632817c2-8848-4aea-9555-e8206b956ca3
    rabbitmq:
      exchange: ioapp.exchange
      queue: ioapp.queue
      routingkey: ioapp.routingkey


management:
  endpoints:
    jmx:
      exposure:
        include: '*'
    web:
      exposure:
        include: '*'